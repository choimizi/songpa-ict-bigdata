7/29
1. 목요일에 마지막 진단평가, 1차적인 기본교육 종료

2. 8월 2일이 파이썬 기반 통계처리에 대한 교육이 이선순 교수님이 투입되며 3일간 12시간 수업 진행

* 엑셀에서 만든 데이터를 csv로 보내기
file-save as- 쉼표로 분리(.csv) - 저장할 위치 선택

# page 291
## 데이터 프레임 공백 데이터
np.Nan
None

## 전처리 함수
df.isnull()
df.isna()
df.notnull()

df.isnull().sum() : 결측치 개수를 구함
df.isna().sum() :
df.notnull().sum() :

<<실습>>
index5에 아래와 같은 데이터를 임의로 삽입하여 중복데이터를 만들어보자
강감찬 90 90 70

## 중복데이터 조회
df.duplicated(keep=False)
1) keep: 전체 조회

## 데이터 삭제
1) df.dropna(how=' ', axis=0/2)
how=any를 주면 하나라도 공백이 있는 데이터를 삭제
2) how=all를 주면 하나라도 전체공백이 있는 데이터를 삭제
이때 행과 열에 대해서 axis를 통해 지정하면 좀 더 세부적인 데이터에 접근하여 삭제할 수 있다

3) df.dropna(subset='열이름') : 열이름과 동일한 컬럼을 찾아 공백이 있는 데이터는 삭제한다
4) df.dropna(thresh='숫자', axis=행/열) : 삭제할 행/열에 대해서 숫자 이상의 데이터는 남기고 나머지에 대해서 삭제
<<응용>>
열 kor 과목에 결측치 데이터가 있으면 삭제
열 kor, end, com 과목에 결측치 데이터가 있으면 삭제

5) 중복데이터 삭제
df.duplicates(keep='False', ignore_index=True, inplace=True)
    - 'first': 첫번째에 위치한 것 빼고 모두 지움(default)
    - 'last': 마지막에 위치한 것 빼고 모두 지움
    - False: 모두 다 지움

<<응용>> df_backup 데이터프레임을 df에 복사한 후, 마지막 데이터는 남기고 나머지 삭제

## 데이터 대체
df['특정열'] = fillna(df['특정열'].적용할 함수())
1) 특정열을 0으로 대체하기
df['특정열'].fillna(0)
2) 대체값으로 많이 사용하는 함수
mean() : 평균값
median() : 중위수
mode() : 최빈수

<<실습>> 열 kor에 결측치 값에 0 부여
<<실습>> 열 mat에 결측치 값에 평균값 부여
<<실습>> 열 eng에 결측치 값에 중위수(중위값) 부여

<<응용>> 김유신, 유관순, 이순신 데이터를 삭제하고 나머지 데이터는 유지시키도록 thresh 명령을 진행
[실행결과]
홍길동
강감찬
<<응용>> 김유신 데이터를 삭제하고 나머지 데이터는 유지시키도록 thresh 명령을 진행

## ==================================================
! pip install missingno     # 주피터 셀에서 바로 설치

import missingno as msno  # 미싱노
import matplotlib.pyplot as plt  # 맷플롯립 라이브러리(그래픽 시각화 라이브러리)
import seaborn as sns  # 시본 라이브러리(그래픽 시각화 라이브러리)

plt.rcParams['font.family'] = ['Apple gothic']
plt.show()  # 시각화를 그래픽으로 보여주기

## 데이터 내용에 대한 자료형을 한눈에 파악하기
df.info
df.describe
df.describe() : 요약한 데이터 통계를 한눈에 파악

# page 293
msno.matrix()

# page 303 1,2,3번 -> 파일이 없어서 패스
# page 320 1~12번
<<응용>> # 응용1. df['전공코드']가 N20이고 프로젝트명이 온라인게임인 데이터 코드를 무조건 N88로 변경
<<응용>> # 응용2. 4과목(글로컬영어, 알고리즘, 자료구조, PYTHON) 점수가 모두 80점 이상인 데이터를 조회
<<응용>> # 응용3. 성명이 김씨 성을 가진 사람을 조회
       # HINT df['성명'].str.contains('김')

## ==================================================

## 피벗테이블(pivot table) : 데이터를 행(index)과 열(column) 단위로 특정한 함수를 이용하여 그룹화해서 보여줌(기본이 평균값으로 계산)
1) df.pivot_table(index='행기준', value='데이터값') : 평균값을 기준으로 행단위로 그룹화하여 표시
2) df.pivot_table(index='행기준', value='데이터값', aggfunc=['적용할 함수']) : 정해진 함수를 적용하여 평균값을 기준으로 행단위로 그룹화하여 표시
* 만약 행단위를 열단위를 변경하고 싶다면 index를 columns로 변경

<<응용>> # 알고리즘과 자료구조에 대한 합계, 평균, 최대값, 최소값으로 피벗테이블로 행기준 요약